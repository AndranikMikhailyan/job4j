package ru.job4j.tracker;

import java.util.List;

/**
 * Интерфейс описывает поведение класса Tracker.
 * @author Andranik
 * @since 1.0
 */

public interface ITracker {
    /**
     *Метод добавляет новую заявку в хранилище заявок.
     * @param item Заявка которую необходимо добавить.
     * @return Возвращает добавленную заявку.
     */
    Item add(Item item);

    /**
     * Метод заменяет заявку с уникальным номером "id" на другую заявку "item".
     * @param id Уникальный номер заменяемой заявки
     * @param item Новая заявка в замен существующей по "id" заявке.
     * @return Возвращает true если заявка заменена, false если замена не произошла.
     */
    boolean replace(String id, Item item);

    /**
     * Метод удаляет заявку с уникальным номером "id" из хранилища заявок.
     * @param id Уникальный номер удаляемой заявки.
     * @return Возвращает true если заявка удалена, false если удаление не произошло.
     */
    boolean delete(String id);

    /**
     * Метод возвращает список всех заявок.
     * @return Возвращает лист(коллекцию) всех заявок.
     */
    List<Item> findAll();

    /**
     * Метод находит все заявки с именем "key".
     * @param key Имя по которому необходимо искать заявки.
     * @return Возвращает лист(коллекцию) заявок с заданным именем.
     */
    List<Item> findByName(String key);

    /**
     * Метод ище заявку с уникальным номером "id".
     * @param id Уникальный номер искомой заявки.
     * @return Возвращает заявку по id.
     */
    Item findById(String id);
}
